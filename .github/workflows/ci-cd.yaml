name: Build & Deploy to Cloud Run (Development)

on:
  push:
    branches:
      - gcp-devtest
  workflow_dispatch:
    inputs:
      ROLLBACK:
        description: 'Set to true to roll back to the previous image'
        required: false
        default: 'false'

env:
  IMAGE_BASE: us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}
  COMMIT_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: development

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.ARTIFACT_DOMAIN }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build services
        run: |
          docker-compose build web workers ignitedapi_scheduler

      - name: Tag, push, and cleanup images
        run: |
          SERVICES=(
            "${{ secrets.IGNITEDAPI }}"
            "${{ secrets.IGNITEDAPI_WORKERS }}"
            "${{ secrets.IGNITEDAPI_SCHEDULER }}"
            "${{ secrets.IGNITED_CHAT_STAGING }}"
          )

          CUSTOM_CMDS=(
            ""
            ""
            "node workers/scheduled/poc-warning.js"
            "npm start"
          )

          for index in "${!SERVICES[@]}"; do
            NAME="${SERVICES[$index]}"
            CMD="${CUSTOM_CMDS[$index]}"
            REMOTE_IMAGE="$IMAGE_BASE/$NAME"

            echo "Processing image: $NAME"

            if [[ -n "$CMD" ]]; then
              docker build -t local/$NAME . --build-arg CMD="$CMD"
            else
              docker tag $NAME local/$NAME
            fi

            # Pull existing latest and push as previous, if exists
            if docker pull $REMOTE_IMAGE:latest 2>/dev/null; then
              docker tag $REMOTE_IMAGE:latest $REMOTE_IMAGE:previous
              docker push $REMOTE_IMAGE:previous
              echo "Tagged and pushed previous image for $NAME"
            else
              echo "No existing latest image found for $NAME"
            fi

            # Tag and push new image
            docker tag local/$NAME $REMOTE_IMAGE:latest
            docker tag local/$NAME $REMOTE_IMAGE:$COMMIT_TAG
            docker push $REMOTE_IMAGE:latest
            docker push $REMOTE_IMAGE:$COMMIT_TAG

            # Check if repository exists before cleanup
            if gcloud artifacts repositories describe ${{ secrets.REPO }} \
              --location=us-central1 --project=${{ secrets.PROJECT_ID }} > /dev/null 2>&1; then

              TAGS=$(gcloud artifacts docker tags list $REMOTE_IMAGE \
                --sort-by=~TIMESTAMP \
                --format="value(name)" 2>/dev/null | grep -vE 'latest|previous' | tail -n +4 || true)

              for TAG in $TAGS; do
                echo "Deleting old tag: $TAG"
                gcloud artifacts docker images delete "$TAG" --quiet --delete-tags || true
              done

            else
              echo "Repository or image not found yet. Skipping cleanup for $NAME"
            fi

            echo "Completed processing $NAME"
          done

      - name: Check if Cloud Run service exists
        id: check-run
        run: |
          if gcloud run services describe ${{ secrets.CLOUD_RUN }} \
            --region=${{ secrets.REGION }} \
            --platform=managed; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Rollback to previous version
        if: github.event.inputs.ROLLBACK == 'true'
        run: |
          for NAME in \
              "${{ secrets.IGNITEDAPI }}" \
              "${{ secrets.IGNITEDAPI_WORKERS }}" \
              "${{ secrets.IGNITEDAPI_SCHEDULER }}" \
              "${{ secrets.IGNITED_CHAT_STAGING }}"; do

            echo "Rolling back $NAME to previous"
            gcloud run deploy ${{ secrets.CLOUD_RUN }} \
              --image $IMAGE_BASE/$NAME:previous \
              --region ${{ secrets.REGION }} \
              --platform managed \
              --quiet || echo "Rollback failed for $NAME. Previous tag might be missing."
          done
