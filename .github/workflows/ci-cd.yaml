name: Build & Push to Artifact Registry (Development)

on:
  push:
    branches:
      - gcp-devtest
  workflow_dispatch:
    inputs:
      ROLLBACK:
        description: 'Set to true to roll back to previous image'
        required: false
        default: 'false'

env:
  IMAGE_BASE: us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}
  COMMIT_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: development

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud using WIF
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.ARTIFACT_DOMAIN }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Tag old :latest images as :previous (before build)
        continue-on-error: true
        run: |
          for IMAGE in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            echo "Tagging $IMAGE:latest as :previous..."
            docker pull $IMAGE_BASE/$IMAGE:latest || echo "No latest image for $IMAGE"
            if docker image inspect $IMAGE_BASE/$IMAGE:latest > /dev/null 2>&1; then
              docker tag $IMAGE_BASE/$IMAGE:latest $IMAGE_BASE/$IMAGE:previous
              docker push $IMAGE_BASE/$IMAGE:previous
            fi
          done

      - name: Build and tag web (IgnitedAPI) and workers (IgnitedAPI_Workers)
        run: |
          docker build -t $IMAGE_BASE/${{ secrets.IGNITEDAPI }} . --build-arg CMD="npm start"
          docker build -t $IMAGE_BASE/${{ secrets.IGNITEDAPI_WORKERS }} . --build-arg CMD="node all-workers.js"

      - name: Build and tag Scheduler
        run: |
          IMAGE=${{ secrets.IGNITEDAPI_SCHEDULER }}
          docker build -t $IMAGE_BASE/$IMAGE . --build-arg CMD="node workers/scheduled/poc-warning.js"

      - name: Build and tag Chat Staging
        run: |
          IMAGE=${{ secrets.IGNITED_CHAT_STAGING }}
          docker build -t $IMAGE_BASE/$IMAGE . --build-arg CMD="npm start"

      - name: Confirm all built images
        run: docker images

      - name: Tag and push all images to Artifact Registry
        run: |
          for IMAGE in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            docker tag $IMAGE_BASE/$IMAGE $IMAGE_BASE/$IMAGE:$COMMIT_TAG
            docker tag $IMAGE_BASE/$IMAGE $IMAGE_BASE/$IMAGE:latest
            docker push $IMAGE_BASE/$IMAGE:$COMMIT_TAG
            docker push $IMAGE_BASE/$IMAGE:latest
          done

      - name: Cleanup old digests (keep latest 3 per image)
        continue-on-error: true
        run: |
          for IMAGE in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            echo "Cleaning up $IMAGE..."
            gcloud artifacts docker images list ${{ secrets.PROJECT_ID }}/${{ secrets.REPO }} \
              --filter="package=$IMAGE" \
              --include-tags \
              --sort-by="~createTime" \
              --format="value(version)" | tail -n +4 | while read digest; do
                echo "Deleting old digest $digest for $IMAGE"
                gcloud artifacts docker images delete $IMAGE_BASE/$IMAGE@$digest --quiet || true
              done
          done

      - name: Check if Cloud Run service exists
        id: check-run
        run: |
          if gcloud run services describe ${{ secrets.CLOUD_RUN }} --region=${{ secrets.REGION }} --platform=managed; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Rollback to previous if requested
        if: github.event.inputs.ROLLBACK == 'true'
        run: |
          for IMAGE in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }}; do
            echo "Rolling back $IMAGE to 'previous' tag"
            gcloud run deploy ${{ secrets.CLOUD_RUN }} \
              --image $IMAGE_BASE/$IMAGE:previous \
              --region ${{ secrets.REGION }} \
              --platform managed \
              --quiet
          done
