name: Build & Push to Artifact Registry (Development)

on:
  push:
    branches:
      - gcp-devtest

env:
  IMAGE_BASE: us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}
  COMMIT_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: development

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud using WIF
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.ARTIFACT_DOMAIN }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker images using docker-compose
        run: |
          docker-compose build web workers

      - name: Build Scheduler Image (IgnitedAPI_Scheduler)
        run: |
          docker build -t $IMAGE_BASE/${{ secrets.IGNITEDAPI_SCHEDULER }} . \
            --build-arg CMD="node workers/scheduled/poc-warning.js"

      - name: Build Chat Staging Image (Ignited_Chat_Staging)
        run: |
          docker build -t $IMAGE_BASE/${{ secrets.IGNITED_CHAT_STAGING }} . \
            --build-arg CMD="npm start"

      - name: Pull existing latest and tag as previous
        continue-on-error: true
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            echo "Tagging previous for $image..."
            docker pull $IMAGE_BASE/$image:latest && \
            docker tag $IMAGE_BASE/$image:latest $IMAGE_BASE/$image:previous && \
            docker push $IMAGE_BASE/$image:previous || echo "No latest image exists for $image to tag as previous"
          done

      - name: Tag and Push latest images
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            docker tag $IMAGE_BASE/$image $IMAGE_BASE/$image:latest
            docker tag $IMAGE_BASE/$image $IMAGE_BASE/$image:$COMMIT_TAG
            docker push $IMAGE_BASE/$image:latest
            docker push $IMAGE_BASE/$image:$COMMIT_TAG
          done

      - name: Cleanup old images in Artifact Registry (keep latest 3)
        continue-on-error: true
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            echo "Cleaning up old images for $image..."

            FULL_IMAGE_PATH="${{ env.IMAGE_BASE }}/$image"

            gcloud artifacts docker images list $FULL_IMAGE_PATH \
              --include-tags \
              --sort-by="~createTime" \
              --format="value(digest)" | tail -n +4 | while read digest; do

              TAGS=$(gcloud artifacts docker tags list $FULL_IMAGE_PATH@$digest \
                --format="value(tag)" || echo "")

              if echo "$TAGS" | grep -qE "latest|previous"; then
                echo "Skipping digest $digest (has protected tag)"
                continue
              fi

              echo "Deleting digest $digest for $image"
              gcloud artifacts docker images delete $FULL_IMAGE_PATH@$digest --quiet || true
            done
          done
