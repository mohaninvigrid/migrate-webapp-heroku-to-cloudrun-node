name: Build & Push to Artifact Registry (Development)

on:
  push:
    branches:
      - gcp-devtest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: development

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud using WIF
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.ARTIFACT_DOMAIN }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build images using docker-compose
        run: |
          docker-compose build || echo "Skipping build if services not found"

      - name: Build and Push Ignited Scheduler
        run: |
          docker build -t ${{ secrets.ARTIFACT_DOMAIN }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/${{ secrets.IGNITEDAPI_SCHEDULER }} . \
            --build-arg CMD="node workers/scheduled/poc-warning.js"

      - name: Build and Push Chat Staging
        run: |
          docker build -t ${{ secrets.ARTIFACT_DOMAIN }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/${{ secrets.IGNITED_CHAT_STAGING }} . \
            --build-arg CMD="npm start"

      - name: Tag images as 'latest'
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            docker tag ${{ secrets.ARTIFACT_DOMAIN }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image \
              ${{ secrets.ARTIFACT_DOMAIN }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image:latest || echo "Tag failed for $image"
          done

      - name: Push all tagged images to Artifact Registry
        continue-on-error: true
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            docker push ${{ secrets.ARTIFACT_DOMAIN }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image:latest || echo "Push failed for $image"
          done

      - name: Retag previous image digest as 'previous'
        continue-on-error: true
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            DIGEST=$(gcloud artifacts docker images list ${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image \
              --include-tags --format="get(digest)" --limit=2 | tail -n 1)
            if [ -n "$DIGEST" ]; then
              gcloud artifacts docker tags add ${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image@$DIGEST \
                ${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image:previous
            fi
          done

      - name: Cleanup old image digests (keep latest 3)
        continue-on-error: true
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            gcloud artifacts docker images list ${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image \
              --include-tags --sort-by="~createTime" \
              --format="value(version)" | tail -n +4 | while read digest; do
                gcloud artifacts docker images delete ${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}/$image@$digest --quiet || true
              done
          done
