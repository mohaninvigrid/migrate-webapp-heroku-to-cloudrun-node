name: Build & Push to Artifact Registry (Development)

on:
  push:
    branches:
      - gcp-devtest

env:
  IMAGE_BASE: us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO }}
  COMMIT_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: development

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud using WIF
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.ARTIFACT_DOMAIN }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build images using docker-compose
        run: |
          docker-compose build web workers

      - name: Build scheduler and chat manually
        run: |
          docker build -t $IMAGE_BASE/${{ secrets.IGNITEDAPI_SCHEDULER }} . \
            --build-arg CMD="node workers/scheduled/poc-warning.js"
          docker build -t $IMAGE_BASE/${{ secrets.IGNITED_CHAT_STAGING }} . \
            --build-arg CMD="npm start"

      - name: Pull latest & tag as previous
        continue-on-error: true
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            docker pull $IMAGE_BASE/$image:latest && \
            docker tag $IMAGE_BASE/$image:latest $IMAGE_BASE/$image:previous && \
            docker push $IMAGE_BASE/$image:previous || echo "No latest image to retag for $image"
          done

      - name: Clean old digests (keep only :latest and :previous)
        continue-on-error: true
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            echo "Cleaning old digests for $image..."
            digests=$(gcloud artifacts docker images list $IMAGE_BASE/$image \
              --include-tags --sort-by="~createTime" --format="value(digest)")
            
            keep=$(gcloud artifacts docker tags list $IMAGE_BASE/$image \
              --format="value(version)" --filter="tag=latest OR tag=previous")

            for digest in $digests; do
              if echo "$keep" | grep -q "$digest"; then
                echo "Keeping digest $digest"
              else
                echo "Deleting digest $digest"
                gcloud artifacts docker images delete $IMAGE_BASE/$image@$digest --quiet --delete-tags || true
              fi
            done
          done

      - name: Tag new images as latest and push
        run: |
          for image in ${{ secrets.IGNITEDAPI }} ${{ secrets.IGNITEDAPI_WORKERS }} ${{ secrets.IGNITEDAPI_SCHEDULER }} ${{ secrets.IGNITED_CHAT_STAGING }}; do
            docker tag $IMAGE_BASE/$image $IMAGE_BASE/$image:latest
            docker push $IMAGE_BASE/$image:latest
          done
